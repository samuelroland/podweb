/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package podweb;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import io.javalin.Javalin;
import io.javalin.testtools.JavalinTest;
import podweb.models.Query;

import static org.assertj.core.api.Assertions.*;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.sql.SQLException;

public class AuthTest {
    Javalin app = App.setupApp();

    @BeforeEach
    public void setup() throws SQLException {
        Query.startTransaction();
    }

    @AfterEach
    public void finish() throws SQLException {
        Query.rollback();
    }

    @Test
    public void login_page_exists() {
        JavalinTest.test(app, (server, client) -> {
            var res = client.get("/login");
            assertEquals(200, res.code());
            String page = res.body().string();
            assertThat(page).contains("<h1>Login").contains("<input").contains("Submit");
        });
    }

    @Test
    public void login_post_works_on_valid_pwd_and_setup_session() {
        JavalinTest.test(app, (server, client) -> {
            var res = client.post("/login", "email=stokes.ena@example.org&password=pass");
            assertEquals(200, res.code());
            String page = res.body().string();
            assertThat(page).doesNotContain("Login error");
            // cannot test further because redirection makes another request and loose
            // cookies
            // assertThat(page).contains("Eulalia");
        });
    }

    @Test
    public void login_post_fails_on_invalid_user_or_pwd() {
        JavalinTest.test(app, (server, client) -> {
            // Invalid user
            var res = client.post("/login", "email=asdfsadfsdaf&password=asdf");
            assertEquals(200, res.code());
            String page = res.body().string();
            assertThat(page).contains("<h1>Login");
            assertThat(page).contains("Login error");

            // Invalid pwd
            var res2 = client.post("/login", "email=stokes.ena@example.org&password=asdfsadf");
            assertEquals(200, res2.code());
            String page2 = res2.body().string();
            assertThat(page2).contains("<h1>Login");
            assertThat(page2).contains("Login error");
        });
    }

    @Test
    public void logout_feature_exists() {
        JavalinTest.test(app, (server, client) -> {
            // Login
            AppTest.actingAs(1);
            var res = client.get("/");
            assertThat(res.body().string()).contains("Eulalia");

            // and logout
            var res2 = client.get("/logout");
            assertEquals(200, res.code());
            String page = res2.body().string();
            assertThat(page).contains("<h1>Podcasts");
            assertThat(page).doesNotContain("Eulalia");
            assertThat(page).doesNotContain("Logout");
        });
    }
}